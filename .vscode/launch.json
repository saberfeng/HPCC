{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "third llmTst dcqcn",
            "type": "cppdbg", // cppdbg for GDB or LLDB
            "request": "launch", // "launch" a program or "attach" to an already running instance 
            "program": "${workspaceFolder}/simulation/build/scratch/third",
            "args": [
                "simulation/mix/rand_offset/config_fat_llmTest_dcqcn.txt",
            ],
            "cwd":"${workspaceFolder}", // cwd:working directory
            "setupCommands": [ // important for pretty printing containers: vectors, maps....
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "python import sys;sys.path.insert(0, '/usr/share/gcc-4.8/python');from libstdcxx.v6.printers import register_libstdcxx_printers;register_libstdcxx_printers(None)",
                    "ignoreFailures": false
                },
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
        },

        {
            "name": "third llmTst hp",
            "type": "cppdbg", // cppdbg for GDB or LLDB
            "request": "launch", // "launch" a program or "attach" to an already running instance 
            "program": "${workspaceFolder}/simulation/build/scratch/third",
            "args": [
                "simulation/mix/rand_offset/config_fat_llmTest_hp95ai50.txt",
            ],
            "cwd":"${workspaceFolder}", // cwd:working directory
            "setupCommands": [ // important for pretty printing containers: vectors, maps....
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "python import sys;sys.path.insert(0, '/usr/share/gcc-4.8/python');from libstdcxx.v6.printers import register_libstdcxx_printers;register_libstdcxx_printers(None)",
                    "ignoreFailures": false
                },
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
        },

        {
            "name": "third llmTst hpccPint",
            "type": "cppdbg", // cppdbg for GDB or LLDB
            "request": "launch", // "launch" a program or "attach" to an already running instance 
            "program": "${workspaceFolder}/simulation/build/scratch/third",
            "args": [
                "simulation/mix/rand_offset/config_fat_llmTest_hpccPint95ai50log1.050p1.000.txt",
            ],
            "cwd":"${workspaceFolder}", // cwd:working directory
            "setupCommands": [ // important for pretty printing containers: vectors, maps....
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "python import sys;sys.path.insert(0, '/usr/share/gcc-4.8/python');from libstdcxx.v6.printers import register_libstdcxx_printers;register_libstdcxx_printers(None)",
                    "ignoreFailures": false
                },
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
        },

        {
            "name": "gen conf llmTstDCQCN",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/run_hybrid.py",
            "console": "integratedTerminal",
            "args": [
                "--cc", "dcqcn",
                "--flow", "llmTest",
                "--topo", "fat",
                "--enable_tr", "0",
                "--update_model_param", "1",
            ],
            "cwd":"${workspaceFolder}",
        },

        {
            "name": "gen conf llmTstHP",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/run_hybrid.py",
            "console": "integratedTerminal",
            "args": [
                "--cc", "hp",
                "--flow", "llmTest",
                "--topo", "fat",
                "--enable_tr", "0",
                "--update_model_param", "1",
            ],
            "cwd":"${workspaceFolder}",
        },

        {
            "name": "gen conf hpccPint-1.05-1",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/run_hybrid.py",
            "console": "integratedTerminal",
            "args": [
                "--cc", "hpccPint",
                "--flow", "llmTest",
                "--topo", "fat",
                "--enable_tr", "0",                
                "--pint_log_base", "1.05",
                "--pint_prob", "1",
                "--update_model_param", "1",
            ],
            "cwd":"${workspaceFolder}",
        },

        {
            "name": "gen_llm_flows",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/scripts/traffic_gen/gen_llm_flows.py",
            "console": "integratedTerminal",
            "args": [
                "--cdf", "simulation/scripts/traffic_gen/llm_train_cdf.txt",
                "--nhost", "16",
                "--load", "0.3",
                "--bandwidth", "10G",
                "--end_time", "0.1",
                "--output", "simulation/mix/rand_offset/llmTest.txt",
                "--scenario", "GPT1_data_parallel",
            ],
            "cwd":"${workspaceFolder}",
        },

        {
            "name": "test_rand_Offset",
            "type": "cppdbg", // cppdbg for GDB or LLDB
            "request": "launch", // "launch" a program or "attach" to an already running instance 
            "program": "${workspaceFolder}/simulation/build/scratch/test_rand_offset",
            "args": [
            ],
            "cwd":"${workspaceFolder}", // cwd:working directory
            "setupCommands": [ // important for pretty printing containers: vectors, maps....
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "python import sys;sys.path.insert(0, '/usr/share/gcc-4.8/python');from libstdcxx.v6.printers import register_libstdcxx_printers;register_libstdcxx_printers(None)",
                    "ignoreFailures": false
                },
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
        },


        {
            "name": "3n2f gen conf",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/run_hybrid.py",
            "console": "integratedTerminal",
            "args": [
                "--cc", "rand_offset",
                "--flow", "3n2f_flow",
                "--topo", "3n2f_topo",
                "--enable_tr", "1",
            ],
            "cwd":"${workspaceFolder}",

        },

        {
            "name": "2n1f test",
            "type": "debugpy",
            "request": "launch",
            "program": "calc_matrix.py",
            "console": "integratedTerminal",
            "args": ["-r", "test_2node/R_2n1f.txt",
                    "-i", "test_2node/Gamma_2n1f.txt",
                    "-s", "test_2node/Mu_2n1f.txt",
                    "-f", "1",
                    "-q", "test_2node/qsz_2n1f.txt",
                    "-o1", "test_2node/o_2n1f_rho.txt",
                    "-o2", "test_2node/o_2n1f_nodrop_prob.txt"],
            "cwd":"${workspaceFolder}/simulation/scripts"
        },

        {
            "name": "2n2f test",
            "type": "debugpy",
            "request": "launch",
            "program": "calc_matrix.py",
            "console": "integratedTerminal",
            "args": ["-r", "test_2node/R_2n2f.txt",
                    "-i", "test_2node/Gamma_2n2f.txt",
                    "-s", "test_2node/Mu_2n2f.txt",
                    "-f", "2",
                    "-q", "test_2node/qsz_2n2f.txt",
                    "-o1", "test_2node/o_2n2f_rho.txt",
                    "-o2", "test_2node/o_2n2f_nodrop_prob.txt"],
            "cwd":"${workspaceFolder}/simulation/scripts"
        },

        {
            "name": "gen_net",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/scripts/gen_net.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd":"${workspaceFolder}"
        },

        {
            "name": "cmake_helper",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/scripts/cmake_helper.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd":"${workspaceFolder}"
        },

        {
            "name": "test gen_flow",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/simulation/scripts/traffic_gen/traffic_gen.py",
            "console": "integratedTerminal",
            "args": [
                "--cdf", "simulation/scripts/traffic_gen/llm_train_cdf.txt",
                "--nhost", "320",
                "--load", "0.3",
                "--bandwidth", "10G",
                "--time", "10",
                "--output", "simulation/scripts/traffic_gen/llm_flows.txt"
            ],
            "cwd":"${workspaceFolder}",
        },

        {
            "name": "Python:cur file",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "cwd":"${workspaceFolder}",
        }       



    ]
}